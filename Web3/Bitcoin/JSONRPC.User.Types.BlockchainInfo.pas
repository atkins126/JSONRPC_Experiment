// This unit is autogenerated. Do not edit it manually.
// Source: JSON entered in editor
// Date: 3/11/2023 2:32:52 PM

unit JSONRPC.User.Types.BlockchainInfo;

interface

uses
  System.JSON.Serializers, System.JSON;

type
  [JsonSerialize(TJsonMemberSerialization.Fields)]
  BlockchainInfoResult = record
  private
    [JsonName('chain')]
    Fchain: string;
    [JsonName('blocks')]
    Fblocks: Integer;
    [JsonName('headers')]
    Fheaders: Integer;
    [JsonName('bestblockhash')]
    Fbestblockhash: string;
    [JsonName('difficulty')]
    Fdifficulty: Double;
    [JsonName('time')]
    Ftime: Integer;
    [JsonName('mediantime')]
    Fmediantime: Integer;
    [JsonName('verificationprogress')]
    Fverificationprogress: Double;
    [JsonName('initialblockdownload')]
    Finitialblockdownload: Boolean;
    [JsonName('chainwork')]
    Fchainwork: string;
    [JsonName('size_on_disk')]
    Fsize_on_disk: UInt64;
    [JsonName('pruned')]
    Fpruned: Boolean;
    [JsonName('pruneheight')]
    Fpruneheight: Integer;
    [JsonName('automatic_pruning')]
    Fautomatic_pruning: Boolean;
    [JsonName('prune_target_size')]
    Fprune_target_size: UInt64;
    [JsonName('warnings')]
    Fwarnings: string;
  public
    class function FromJSON(const AValue: TJSONValue): BlockchainInfoResult; overload; static;
    class function FromJSON(const AValue: string): BlockchainInfoResult; overload; static;
    function ToJSONObject: TJSONValue;
    function ToJSONString: string;
    property chain: string read Fchain write Fchain;
    property blocks: Integer read Fblocks write Fblocks;
    property headers: Integer read Fheaders write Fheaders;
    property bestblockhash: string read Fbestblockhash write Fbestblockhash;
    property difficulty: Double read Fdifficulty write Fdifficulty;
    property time: Integer read Ftime write Ftime;
    property mediantime: Integer read Fmediantime write Fmediantime;
    property verificationprogress: Double read Fverificationprogress write Fverificationprogress;
    property initialblockdownload: Boolean read Finitialblockdownload write Finitialblockdownload;
    property chainwork: string read Fchainwork write Fchainwork;
    property size_on_disk: UInt64 read Fsize_on_disk write Fsize_on_disk;
    property pruned: Boolean read Fpruned write Fpruned;
    property pruneheight: Integer read Fpruneheight write Fpruneheight;
    property automatic_pruning: Boolean read Fautomatic_pruning write Fautomatic_pruning;
    property prune_target_size: UInt64 read Fprune_target_size write Fprune_target_size;
    property warnings: string read Fwarnings write Fwarnings;
  end;

implementation

class function BlockchainInfoResult.FromJSON(const AValue: TJSONValue): BlockchainInfoResult;
begin
  Result := TJSONMapper<BlockchainInfoResult>.Default.FromObject(AValue);
end;

class function BlockchainInfoResult.FromJSON(const AValue: string): BlockchainInfoResult;
begin
  Result := TJSONMapper<BlockchainInfoResult>.Default.FromObject(AValue);
end;

function BlockchainInfoResult.ToJSONObject: TJSONValue;
begin
  Result := TJSONMapper<BlockchainInfoResult>.Default.ToObject(Self);
end;

function BlockchainInfoResult.ToJSONString: string;
begin
  Result := TJSONMapper<BlockchainInfoResult>.Default.ToString(Self);
end;

end.
